#!/usr/bin/env bash

# {{{ Header
SCRIPT_PATH=$(realpath -s "${BASH_SOURCE[0]}")
SCRIPT_NAME=$(basename "$SCRIPT_PATH")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
readonly SCRIPT_PATH SCRIPT_NAME SCRIPT_DIR
exec 3>&1 4>&2
exec 1>log.txt 2>&1
log() {
    local BOLD RED GREEN YELLOW ESC
    BOLD=$(tput bold)
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    YELLOW=$(tput setaf 3)
    ESC=$(tput sgr0)
    case "$2" in
    "err")
        printf "%s%s%s\n" "${BOLD}${RED}" "$1" "$ESC" >&4
        ;;
    "warn")
        printf "%s%s%s\n" "${BOLD}${YELLOW}" "$1" "$ESC" >&3
        ;;
    *)
        printf "%s%s%s\n" "${BOLD}${GREEN}" "$1" "$ESC" >&3
        ;;
    esac
    if [[ -n "$3" ]]; then
        exit "$3"
    fi
}
trap "log 'Check log.txt for errors' err" ERR
set -v

download_and_check() {
    local url=$1
    local dest=$2
    log "Downloading from $url and moving in $dest"
    curl --proto '=https' --tlsv1.3 -LsSf "$url" -o /tmp/pending
    bat /tmp/pending
    read -rp "Are we good? y/n: " y
    [[ $y == "y" ]] && install -vD /tmp/pending "$dest"
}
# }}}

declare -a PKG AUR_PKG
DISPLAY_SERVER="Wayland"
source "$SCRIPT_DIR"/misc/package-list.bash

GRAPHICS=$(lspci -v | grep -A1 -e VGA -e 3D)
case ${GRAPHICS^^} in
*NVIDIA*)
    PKG+=(linux-headers)
    PKG+=(nvidia-dkms nvidia-utils nvidia-settings)
    ;;
*AMD* | *ATI*)
    PKG+=(xf86-video-ati libva-mesa-driver vulkan-radeon)
    ;;
*INTEL*)
    PKG+=(libva-intel-driver intel-media-driver vulkan-intel)
    ;;
esac

source "$SCRIPT_DIR"/home/.profile

###############################################################################
# {{{ user
as_user() {
    trap "readonly STATUS_USER=error" ERR

    (
        log "Stow..."
        cd "$SCRIPT_DIR" || log "Couldn't cd to $SCRIPT_DIR" err 1
        stow -vt ~/.config config
        stow -v home
    )

    ###########################################################################
    mkdir ~/.ssh ~/.gnupg
    echo "AddKeysToAgent yes" >~/.ssh/config
    echo "default-cache-ttl 3600" >~/.gnupg/gpg-agent.conf
    gpg-connect-agent reloadagent /bye

    localectl set-x11-keymap us,ru pc104 qwerty grp:win_space_toggle,caps:escape

    ###########################################################################
    log "XDG..."
    DIRS=(
        "$XDG_CONFIG_HOME" "$XDG_CACHE_HOME" "$XDG_DATA_HOME" "$XDG_STATE_HOME"
        "$XDG_CONFIG_HOME"/android/ "$XDG_CACHE_HOME"/less/ "$XDG_CONFIG_HOME"/npm
        "$XDG_CONFIG_HOME"/task/ "$HOME"/.local/bin/ "$HOME"/gitclones/
    )

    for dir in "${DIRS[@]}"; do
        mkdir -p "$dir"
    done

    echo 'data.location=$XDG_CONFIG_HOME/task/' >"$XDG_CONFIG_HOME"/task/taskrc
    cat <<'EOF' >"$XDG_CONFIG_HOME"/npm/npmrc
prefix=${XDG_DATA_HOME}/npm
cache=${XDG_CACHE_HOME}/npm
init-module=${XDG_CONFIG_HOME}/npm/config/npm-init.js
tmp=${XDG_RUNTIME_DIR}/npm
EOF

    ###########################################################################
    (
        log "Paru..."
        git clone https://aur.archlinux.org/paru-git.git /tmp/paru &&
            cd /tmp/paru &&
            makepkg -si

        mkdir -p ~/.config/paru/
        cat <<EOF >~/.config/paru/paru.conf
[options]
BottomUp
PgpFetch
NewsOnUpgrade
UpgradeMenu
[bin]
Sudo = /usr/bin/doas
FileManager = /usr/bin/nvim
EOF
    )
    paru -S --skipreview "${AUR_PKG[@]}" || log "AUR failed" err

    ###########################################################################
    (
        log "Eww..."
        git clone https://github.com/elkowar/eww ~/gitclones/eww && cd ~/gitclones/eww
        if [[ "$DISPLAY_SERVER" == "Wayland" ]]; then
            RUSTFLAGS="-C target-cpu=native" cargo build --release --no-default-features --features=wayland
            install -vsDm 744 target/release/eww ~/.local/bin/eww-wayland
        else
            RUSTFLAGS="-C target-cpu=native" cargo build --release --no-default-features --features=x11
            install -vsDm 744 target/release/eww ~/.local/bin/eww-x
        fi
        # cargo clean
    )

    ###########################################################################
    mkdir -p ~/.local/share/applications/
    cat <<EOF >~/.local/share/applications/nvim.desktop
[Desktop Entry]
Name=nvim
Exec=alacritty --command=nvim --command=%F
Type=Application
EOF

    ###########################################################################
    gio mime inode/directory yazi.desktop
    gio mime application/x-shellscript nvim.desktop
    gio mime image/png imv-dir.desktop
    gio mime image/jpeg imv-dir.desktop
    gio mime x-scheme-handler/terminal Alacritty.desktop
    gio mime application/pdf org.pwmt.zathura.desktop
    gio mime application/x-bittorrent org.qbittorrent.qBittorrent.desktop
    if [[ -n $(command -v handlr) ]]; then
        handlr set 'inode/directory' yazi.desktop
        handlr set 'application/x-shellscript' nvim.desktop
        handlr set 'text/*' nvim.desktop
        handlr set 'audio/*' mpv.desktop
        handlr set 'video/*' mpv.desktop
        handlr set 'image/*' imv-dir.desktop
        handlr set 'x-scheme-handler/terminal' Alacritty.desktop
        handlr set 'application/pdf' org.pwmt.zathura.desktop
        handlr set 'application/x-bittorrent' org.qbittorrent.qBittorrent.desktop
    fi

    ###########################################################################
    if [[ "$DISPLAY_SERVER" == "X" ]]; then
        cat <<EOF >~/.xinitrc
#!/usr/bin/bash
exec bspwm
EOF
    fi

    ###########################################################################
    mkdir ~/.config/git
    cat <<EOF >~/.config/git/config
[alias]
    lg = lg1
    lg1 = lg1-specific --all
    lg2 = lg2-specific --all
    lg3 = lg3-specific --all

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
EOF

    ###########################################################################
    log "Themes..."
    download_and_check \
        "https://raw.githubusercontent.com/catppuccin/yazi/refs/heads/main/themes/mocha/catppuccin-mocha-peach.toml" \
        "$XDG_CONFIG_HOME/yazi/theme.toml"
    download_and_check \
        "https://raw.githubusercontent.com/catppuccin/bat/refs/heads/main/themes/Catppuccin%20Mocha.tmTheme" \
        "$XDG_CONFIG_HOME/yazi/Catppuccin-mocha.tmTheme"

    download_and_check \
        "https://raw.githubusercontent.com/catppuccin/zathura/refs/heads/main/src/catppuccin-mocha" \
        "$XDG_CONFIG_HOME/zathura/catppuccin-mocha"
    download_and_check \
        "https://raw.githubusercontent.com/catppuccin/alacritty/refs/heads/main/catppuccin-mocha.toml" \
        "$XDG_CONFIG_HOME/alacritty/catppuccin-mocha.toml"
    download_and_check \
        "https://raw.githubusercontent.com/catppuccin/foot/refs/heads/main/themes/catppuccin-mocha.ini" \
        "$XDG_CONFIG_HOME/foot/catppuccin-mocha.toml"

    git clone https://github.com/catppuccin/Kvantum /tmp/Kvantum &&
        mkdir -p ~/.config/Kvantum &&
        mv /tmp/Kvantum/src/* ~/.config/Kvantum &&
        kvantummanager --set Catppuccin-Macchiato-Maroon
}
# }}}

###############################################################################
# {{{ root
as_root() {
    trap "readonly STATUS_ROOT=error" ERR

    log "Copy configs to root"
    install -vm 744 "$SCRIPT_DIR"/home/.alias /root/
    install -vm 744 "$SCRIPT_DIR"/home/.zprofile /root/
    install -vm 744 "$SCRIPT_DIR"/home/.zshrc /root/
    install -vm 744 "$SCRIPT_DIR"/home/.vim/vimrc /root/.vimrc

    ###########################################################################
    log "Pacman..."
    sed -Ei 's|^#UseSyslog|UseSyslog|' /etc/pacman.conf
    sed -Ei 's|^#Color|Color|' /etc/pacman.conf
    sed -Ei 's|^#VerbosePkgLists|VerbosePkgLists|' /etc/pacman.conf
    sed -Ei 's|^#?ParallelDownloads.*|ParallelDownloads = 3|' /etc/pacman.conf
    sed -zi 's|#\[multilib\]\n#Include = \/etc\/pacman.d\/mirrorlist|\[multilib\]\nInclude = \/etc\/pacman.d\/mirrorlist|' /etc/pacman.conf
    # sed -Ei 's|^#?MAKEFLAGS=.*|MAKEFLAGS="-j4"|' /etc/makepkg.conf
    pacman -Syu --needed --noconfirm "${PKG[@]}" || log "pacman failed" err

    ###########################################################################
    if pacman -Q zsh &>/dev/null; then
        USER=$(echo "$SCRIPT_PATH" | awk -F '/' '{print $3}')
        chsh -s /usr/bin/zsh
        chsh "$USER" -s /usr/bin/zsh
    fi

    ###########################################################################
    if pacman -Q dnscrypt-proxy &>/dev/null; then
        log "Dnscrypt-proxy..."
        cat <<EOF >/etc/resolv.conf
nameserver ::1
nameserver 127.0.0.1
options edns0
EOF
        cat <<EOF >/etc/NetworkManager/conf.d/dns.conf
[main]
dns=none
systemd-resolved=false
EOF
        sed -Ei "s|^#? ?server_names .*|server_names = ['quad9-dnscrypt-ip4-filter-pri']|" /etc/dnscrypt-proxy/dnscrypt-proxy.toml
        systemctl disable systemd-resolved.service
        systemctl enable dnscrypt-proxy.service
    fi

    ###########################################################################
    if pacman -Q apparmor &>/dev/null; then
        echo " lsm=landlock,lockdown,yama,integrity,apparmor,bpf" >>/etc/kernel/cmdline
        systemctl enable apparmor.service
    fi

    ###########################################################################
    if pacman -Q nvidia-utils &>/dev/null; then
        nvidiaFix
    fi

    ###########################################################################
    cat <<EOF >/etc/NetworkManager/conf.d/wifi_backend.conf
[device]
wifi.backend=iwd
EOF

    ###########################################################################
    systemctl enable earlyoom.service
    systemctl enable paccache.timer

    install -vm 744 "$SCRIPT_DIR"/misc/kernel-module-blacklist.conf /etc/modprobe.d/blacklist.conf
    if pacman -Q linux-zen &>/dev/null; then
        mkinitcpio -p linux-zen
    else
        mkinitcpio -p linux
    fi
}
# }}}

nvidiaFix() {
    log "NVIDIA..."
    echo "options nvidia NVreg_UsePageAttributeTable=1" >/etc/modprobe.d/nvidia.conf
    declare -a MODULES FILES
    source /etc/mkinitcpio.conf
    MODULES+=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)
    sed -Ei "s|^#?MODULES=.*|MODULES=(${MODULES[*]})|" /etc/mkinitcpio.conf
}

###############################################################################

case "$1" in
"root") as_root ;;
"user") as_user ;;
*)
    printf "Usage:\n    doas %s root\nthen\n    %s user\n" "$SCRIPT_NAME" "$SCRIPT_NAME"
    ;;
esac

[[ "$STATUS_USER" == "error" ]] && log "Errors acquired in user's path." err 1
[[ "$STATUS_ROOT" == "error" ]] && log "Errors acquired in root's path." err 1

# vim: foldmethod=marker foldlevel=0 foldlevelstart=0
