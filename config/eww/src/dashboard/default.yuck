(include "src/dashboard/variables.yuck")

(defwidget dashboard-element [?class width height ?tooltip ?style ?orientation ?space-evenly]
  (box :class "dashboard-element ${class}"
       :width {125 * width}
       :height {125 * height}
       :tooltip tooltip
       :style style
       :orientation {orientation ?: "v"}
       :space-evenly {space-evenly ?: false}
       (children)))

(defwidget dashboard-circular-element [?class value text]
  (box
    (circular-progress :class "dashboard-element ${class}"
                       :value value
                       :start-at 0
                       :thickness 10
                       (label :class "dashboard-label"
                              :text text))
    (children)))

(defwidget dashboard-button [class width height ?style onclick text]
  (box
    (button :class "dashboard-element ${class}"
            :width {125 * width}
            :height {125 * height}
            :style style
            :onclick onclick
            (label :text text))
    (children)))


(defwidget time-date []
  (dashboard-element :width 2
                     :height 1
                     :space-evenly true
                     (label :class "dashboard-label"
                            :valign "end"
                            :text time-long)
                     (label :class "dashboard-label"
                            :valign "start"
                            :text date)))

(defwidget sliders []
  (dashboard-element :width 2
                     :height 2
                     :orientation "h"
                     :space-evenly true
                     (box :class "slider slider-battery"
                          :orientation "v"
                          :space-evenly false
                          (scale :active false
                                 :flipped true
                                 :round-digits 0
                                 :value battery
                                 :min 0
                                 :max 100
                                 :orientation "v")
                          (button :class "battery-button"
                                  :onclick ""
                                  (label :text battery-icon)))
                     (box :class "slider slider-brightness"
                          :orientation "v"
                          :space-evenly false
                          (scale :flipped true
                                 :round-digits 0
                                 :value brightness
                                 :min 0
                                 :max brightness_max
                                 :onchange "~/.config/eww/scripts/brightness.bash set {}"
                                 :orientation "v")
                          (button :class "brightness-button"
                                  :onclick "~/.config/eww/scripts/brightness.bash set-max"
                                  (label :text "󰃠")))
                     (box :class "slider"
                          :orientation "v"
                          :space-evenly false
                          (scale :flipped true
                                 :round-digits 0
                                 :value volume
                                 :min 0
                                 :max 150
                                 :onchange "~/bin/volume-control.bash set {}"
                                 :orientation "v")
                          (button :class "volume-mute-button"
                                  :onclick "~/bin/volume-control.bash toggleMute"
                                  (label :text {isMuted ? "󰖁" : "󰕾"})))))

(defwidget player []
  (dashboard-element :width 2
                     :height 3
                     (box :class "dashboard-player-cover"
                          :valign "center"
                          :style "background-image: url('${music-cover}');"
                          :orientation "v"
                          :space-evenly false)
                     (box :valign "center"
                          :orientation "v"
                          :space-evenly false
                          (label :class "dashboard-player-title"
                                 :text music-artist
                                 :limit-width 25
                                 :xalign 0.5)
                          (label :class "dashboard-player-title"
                                 :text music-title
                                 :limit-width 25
                                 :xalign 0.5))
                     (box
                       (button :class "dashboard-player-button"
                               :onclick "~/bin/media-player.bash prev"
                               (label :text "󰒮"))
                       (button :class "dashboard-player-button"
                               :onclick "~/bin/media-player.bash play"
                               (label :text {isMusicPlaying ? "󰏤" : "󰐊"}))
                       (button :class "dashboard-player-button"
                               :onclick "~/bin/media-player.bash next"
                               (label :text "󰒭")))
                     (box :orientation "h"
                          :space-evenly true
                          (label :text music-currenttime)
                          (label :text music-length))
                     (box :class "dashboard-player-progress"
                          :halign "center"
                          :orientation "h"
                          :space-evenly false
                          (scale :active false
                                 :round-digits 0
                                 :value music-progress
                                 :min 0
                                 :max 100
                                 :orientation "h"))))

(defwidget gpu-cpu []
  (dashboard-element :class "dashboard-element-nested"
                     :width 2
                     :height 1
                     :orientation "h"
                     :space-evenly true
                     (dashboard-element :width 1
                                        :height 1
                                        :space-evenly true
                                        :tooltip "GPU: ${gpu}%"
                                        (dashboard-circular-element :class "dashboard-gpu"
                                                                    :value gpu
                                                                    :text "󰒇"))
                     (dashboard-element :width 1
                                        :height 1
                                        :space-evenly true
                                        :tooltip "CPU: ${round(EWW_CPU.avg, 0)}%"
                                        (dashboard-circular-element :class "dashboard-cpu"
                                                                    :value "${EWW_CPU.avg}"
                                                                    :text "󰻠"))))

(defwidget pkg-ram []
  (dashboard-element :class "dashboard-element-nested"
                     :width 2
                     :height 1
                     :orientation "h"
                     :space-evenly true
                     (dashboard-element :class "dashboard-pkg"
                                        :width 1
                                        :height 1
                                        :space-evenly true
                                        :tooltip "Packages to update: ${repository-updates}"
                                        (eventbox :onhover "${EWW_CMD} update pkg-hover=true"
                                                  :onhoverlost "${EWW_CMD} update pkg-hover=false"
                                                  (overlay
                                                    (revealer :transition "crossfade"
                                                              :reveal {!pkg-hover}
                                                              :duration "250ms"
                                                              (label :class "dashboard-label"
                                                                     :text "󰏗"))
                                                    (revealer :transition "crossfade"
                                                              :reveal pkg-hover
                                                              :duration "250ms"
                                                              (label :class "dashboard-label"
                                                                     :text "${repository-updates}")))))
                     (dashboard-element :width 1
                                        :height 1
                                        :space-evenly true
                                        :tooltip "RAM: ${round(EWW_RAM.used_mem_perc, 0)}%"
                                        (dashboard-circular-element :class "dashboard-ram"
                                                                    :value "${EWW_RAM.used_mem_perc}"
                                                                    :text "󰍛"))))

(defwidget uptime-kernel []
  (dashboard-element :width 2
                     :height 1
                     :space-evenly true
                     (label :class "dashboard-label dashboard-label-smaller"
                            :valign "end"
                            :text uptime)
                     (label :class "dashboard-label dashboard-label-smaller"
                            :valign "start"
                            :text kernel)))

(defwidget drive []
  (dashboard-element :class "dashboard-element-nested"
                     :width 1
                     :height 3
                     :orientation "v"
                     :space-evenly true
                     (overlay
                       (box :class "drive"
                            :width 125
                            :height {125 * 2}
                            :tooltip "Drive usage: ${drive-usage}%"
                            :style "margin: 0.5em;"
                            :orientation "v"
                            :space-evenly true
                            (scale :active false
                                   :flipped true
                                   :value drive-usage
                                   :min 0
                                   :max 100
                                   :onchange ""
                                   :orientation "v"))
                       (label :class "dashboard-label drive-icon"
                              :style "font-size: 4em;"
                              :text "󰋊"))))

(defwidget suspend []
  (dashboard-button :class "dashboard-button-suspend"
                    :width 1
                    :height 1
                    :onclick "~/.config/eww/scripts/dashboard.bash; systemctl suspend"
                    :text "󰤄"))

(defwidget reboot []
  (dashboard-button :class "dashboard-button-reboot"
                    :width 1
                    :height 1
                    :onclick "systemctl reboot"
                    :text "󰑐"))

(defwidget shutdown []
  (dashboard-button :class "dashboard-button-shutdown"
                    :width 1
                    :height 1
                    :onclick "systemctl poweroff"
                    :text "󰐥"))

(defwidget dashboard []
  (box :valign "center"
       :halign "center"
       :orientation "h"
       :space-evenly false
       (box :orientation "v"
            :space-evenly false
            (time-date)
            (sliders))
       (box :orientation "v"
            :space-evenly false
            (player))
       (box :orientation "v"
            :space-evenly false
            (gpu-cpu)
            (pkg-ram)
            (uptime-kernel))
       (drive)
       (box :orientation "v"
            :space-evenly false
            (suspend)
            (reboot)
            (shutdown))))

(defwindow closer
  :monitor 0
  :geometry
  (geometry :x "0%"
            :y "0%"
            :width "100%"
            :height "100%"
            :anchor "top left")
  :stacking "overlay"
  :wm-ignore true
  :windowtype "dock"
  (eventbox :onclick "~/.config/eww/scripts/dashboard.bash &"))

(defwindow dashboard
  :monitor 0
  :geometry
  (geometry :x "0%"
            :y "30%"
            :width "0%"
            :height "0%"
            :anchor "top center")
  :stacking "overlay"
  :wm-ignore true
  :windowtype "dock"
  (dashboard))
